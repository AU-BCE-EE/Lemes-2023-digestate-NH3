dat <- arrange(dat, by = id)
# calculation of total flux over time
# Average ammonia flux in measurement interval
dat$flux.tr <- rollapplyr(dat$flux, 2, mean, fill = NA)
dat$flux.tr[dat$elapsed.time == 0] <- 0
dat$flux.tr[dat$flux.tr < 0 ] <- 0
# calculation of total flux over time, last point * 144 min (time from start to start 8 x 10 min)
dat$flux.time <- dat$flux.tr * 80
# cumulative emis
dat <- mutate(group_by(dat, id, treat), cum.emis = cumsum(flux.time))
# Table for plotting flux
dat.summ <- summarise(group_by(dat, treat, elapsed.time), flux.mn = mean(flux), flux.sd = sd(flux),
cum.emis.mn = mean(cum.emis), cum.emis.sd = sd(cum.emis))
dat.end <- dat.summ[dat.summ$elapsed.time == 82.6, ]
dat <- dat[dat$elapsed.time <= 82.6, ]
dat.end.stat <- dat[dat$elapsed.time == 82.6, ]
dat.end.statA <- dat[dat$elapsed.time == 60, ]
dat$id <- as.character(dat$id)
ggplot(dat, aes(elapsed.time, cum.emis, color = id)) +
geom_point() +
geom_line(aes(group = id)) +
theme_bw() +
scale_color_brewer(palette = 'Set1') +
ylab(expression(paste('Cumulative  ', NH[3]-N, '  [g  ', m^-2, ']'))) +
xlab('Time after digestate application [hours]') +
theme(legend.title = element_blank(), legend.position = 'bottom')
# a fair representation when we have more replicates for DC (sd)
ggplot(dat.end, aes(treat, cum.emis.mn, fill = treat)) +
geom_bar(stat = 'identity', width = 0.5) +
geom_errorbar(aes(ymin = cum.emis.mn - cum.emis.sd, ymax = cum.emis.mn + cum.emis.sd), width = 0.3, size = 0.5) +
theme_bw() +
scale_fill_brewer(palette = 'Set1') +
ylab(expression(paste('Cumulative  ', NH[3]-N, '  [g', ' ', m^-2, ']'))) +
theme(legend.position = 'bottom', legend.title = element_blank(), axis.title.x = element_blank())
ggplot(dat, aes(elapsed.time, flux, color = treat)) +
geom_point() +
theme_bw() +
scale_color_brewer(palette = 'Set1') +
ylab(expression(paste(NH[3]-N, '   flux [g  ',  min^-1, ' ', m^-2, ']'))) +
xlab('Time after slurry application [hours]') +
theme(legend.position = 'bottom', legend.title = element_blank())
ggplot(dat.summ, aes(elapsed.time, flux.mn, colour = treat, fill = treat)) +
geom_point() +
geom_line() +
geom_ribbon(aes(ymax = flux.mn + flux.sd, ymin = flux.mn - flux.sd, group = treat), alpha = 0.3, color = NA) +
theme_bw() +
scale_color_brewer(palette = 'Set1') + scale_fill_brewer(palette = 'Set1') +
ylab(expression(paste(NH[3]-N, '  flux [g   ', min^-1, ' ', m^-2, ']'))) +
xlab('Time after slurry application [hours]') +
theme(legend.position = 'bottom', legend.title = element_blank())
rm(list = ls())
dirname(rstudioapi::getActiveDocumentContext()$path)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
source('../scripts/packages.R')
time.exp1 <- c(seq(1, 15.43, by = 0.2), seq(1, 15.43, by = 0.2), seq(1, 15.43, by = 0.2))
time.exp2 <- seq(1, 35.82, by = 0.2)
E1.CC.CM <- (12.0 * time.exp1) / (time.exp1 + 3.0)
E1.D.CM <- (31.8 * time.exp1) / (time.exp1 + 4.4)
E1.U.CM <- (36.1 * time.exp1) / (time.exp1 + 5)
E1.all <- c((12.0 * time.exp1) / (time.exp1 + 3.0), (31.8 * time.exp1) / (time.exp1 + 4.4), (36.1 * time.exp1) / (time.exp1 + 5))
E2.CC.CM <- (19.91 * time.exp2) / (time.exp2 + 1.3)
E2.D.CM <- (49.7 * time.exp2) / (time.exp2 + 1.9)
E2.U.CM <- (80.6 * time.exp2) / (time.exp2 + 2.7)
E2.all <- c((19.91 * time.exp2) / (time.exp2 + 1.3), (49.7 * time.exp2) / (time.exp2 + 1.9), (80.6 * time.exp2) / (time.exp2 + 2.7))
df1 <- data.frame(time.exp1, E1.CC.CM, E1.D.CM, E1.U.CM)
df1 <- data.frame(time.exp1, E1.all)
df1$treatment <- c(rep('D-CM-CC', nrow(df1)/3), rep('D-CM', nrow(df1)/3), rep('U-CM', nrow(df1)/3))
df2 <- data.frame(time.exp2, E2.CC.CM, E2.D.CM, E2.U.CM)
df2 <- data.frame(time.exp2, E2.all)
df2$treatment <- c(rep('D-CM-CC', nrow(df2)/3), rep('D-CM', nrow(df2)/3), rep('U-CM', nrow(df2)/3))
names(df1) <- c('time', 'num', 'treatment')
names(df2) <- c('time', 'num', 'treatment')
df1$experiment <- 'Experiment 1'
df2$experiment <- 'Experiment 2'
dfA <- rbind(df1, df2)
dat <- read.xlsx('../data/Figure 4 data.xlsx', fill = TRUE)
g <- ggplot(dat, aes(time, mean, color = treatment, fill = treatment)) + geom_point() +
theme_bw() +
geom_line(data = dfA, aes(time, num)) +
facet_wrap(~ experiment, scales = 'free_x') +
geom_ribbon(aes (ymax = mean + sd, ymin = mean - sd, group = treatment), alpha = 0.2, color = NA) +
ylab(expression(paste('4-Methylphenol [mg  ', m^-2, ']'))) + xlab('Time from slurry application [h]') +
theme(legend.title = element_blank(), legend.position = 'bottom') +
scale_color_brewer(palette = "Set1") + scale_fill_brewer(palette = 'Set1')
print(g)
rm(list = ls())
rm(list = ls())
dirname(rstudioapi::getActiveDocumentContext()$path)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
source('../scripts/packages.R')
rm(list = ls())
dirname(rstudioapi::getActiveDocumentContext()$path)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
source('../scripts/packages.R')
source('packages.R')
time.exp1 <- c(seq(1, 15.43, by = 0.2), seq(1, 15.43, by = 0.2), seq(1, 15.43, by = 0.2))
time.exp2 <- seq(1, 35.82, by = 0.2)
E1.CC.CM <- (12.0 * time.exp1) / (time.exp1 + 3.0)
E1.D.CM <- (31.8 * time.exp1) / (time.exp1 + 4.4)
E1.U.CM <- (36.1 * time.exp1) / (time.exp1 + 5)
E1.all <- c((12.0 * time.exp1) / (time.exp1 + 3.0), (31.8 * time.exp1) / (time.exp1 + 4.4), (36.1 * time.exp1) / (time.exp1 + 5))
E2.CC.CM <- (19.91 * time.exp2) / (time.exp2 + 1.3)
E2.D.CM <- (49.7 * time.exp2) / (time.exp2 + 1.9)
E2.U.CM <- (80.6 * time.exp2) / (time.exp2 + 2.7)
E2.all <- c((19.91 * time.exp2) / (time.exp2 + 1.3), (49.7 * time.exp2) / (time.exp2 + 1.9), (80.6 * time.exp2) / (time.exp2 + 2.7))
df1 <- data.frame(time.exp1, E1.CC.CM, E1.D.CM, E1.U.CM)
df1 <- data.frame(time.exp1, E1.all)
df1$treatment <- c(rep('D-CM-CC', nrow(df1)/3), rep('D-CM', nrow(df1)/3), rep('U-CM', nrow(df1)/3))
df2 <- data.frame(time.exp2, E2.CC.CM, E2.D.CM, E2.U.CM)
df2 <- data.frame(time.exp2, E2.all)
df2$treatment <- c(rep('D-CM-CC', nrow(df2)/3), rep('D-CM', nrow(df2)/3), rep('U-CM', nrow(df2)/3))
names(df1) <- c('time', 'num', 'treatment')
names(df2) <- c('time', 'num', 'treatment')
df1$experiment <- 'Experiment 1'
df2$experiment <- 'Experiment 2'
dfA <- rbind(df1, df2)
dat <- read.xlsx('../data/Figure 4 data.xlsx', fill = TRUE)
g <- ggplot(dat, aes(time, mean, color = treatment, fill = treatment)) + geom_point() +
theme_bw() +
geom_line(data = dfA, aes(time, num)) +
facet_wrap(~ experiment, scales = 'free_x') +
geom_ribbon(aes (ymax = mean + sd, ymin = mean - sd, group = treatment), alpha = 0.2, color = NA) +
ylab(expression(paste('4-Methylphenol [mg  ', m^-2, ']'))) + xlab('Time from slurry application [h]') +
theme(legend.title = element_blank(), legend.position = 'bottom') +
scale_color_brewer(palette = "Set1") + scale_fill_brewer(palette = 'Set1')
print(g)
library(openxlsx)
dat <- read.xlsx('../data/Figure 4 data.xlsx', fill = TRUE)
g <- ggplot(dat, aes(time, mean, color = treatment, fill = treatment)) + geom_point() +
theme_bw() +
geom_line(data = dfA, aes(time, num)) +
facet_wrap(~ experiment, scales = 'free_x') +
geom_ribbon(aes (ymax = mean + sd, ymin = mean - sd, group = treatment), alpha = 0.2, color = NA) +
ylab(expression(paste('4-Methylphenol [mg  ', m^-2, ']'))) + xlab('Time from slurry application [h]') +
theme(legend.title = element_blank(), legend.position = 'bottom') +
scale_color_brewer(palette = "Set1") + scale_fill_brewer(palette = 'Set1')
print(g)
rm(list = ls())
source('packages.R')
source('functions.R')
source('load.R')
rm(list = ls())
setwd("~/GitHub/Lemes-2022-digestate-NH3/scripts-4mp")
source('packages.R')
source('functions.R')
source('load.R')
source('clean.R')
source('fit_MM.R')
render('4mp_analysis.Rmd', output_dir = '../output-stats')
source('summ.R')
source('export.R')
pp <- subset(preds,
(experiment == 'Experiment 1' & time.end < 19) |
(experiment == 'Experiment 2' & time.end < 40))
ggplot(dat, aes(time.end, fmp, color = treatment, , group = interaction(tunnel, treatment))) +
geom_point() +
#geom_line() +
#geom_line(aes(time.end, fmp.calc), lty = '11') +
geom_line(data = pp, aes(time.end, fmp.calc), lty = 1) +
facet_wrap(~ experiment, scales = 'free_x') +
theme_bw() +
theme(legend.title = element_blank(), legend.position = 'bottom') +
labs(y = expression('4-Methylphenol [mg'~m^'-2'*']'), x  = 'Time from slurry application [h]')
library(rmarkdown)
library(ggplot2)
library(openxlsx)
library(plyr)
rm(list = ls())
dirname(rstudioapi::getActiveDocumentContext()$path)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
source('../scripts/packages.R')
dat <- read.xlsx('../data/Figure 1 data.xlsx', fill = TRUE)
dat.summ <- ddply(dat, c('experiment', 'treat', 'time'), summarise, flux.mn = mean(flux), flux.sd = sd(flux))
# adding application rate, g NH4-N m-2 (from Table 1)
dat.summ$app.rate <- dat.summ$treat
dat.summ$app.rate <- mapvalues(dat.summ$app.rate, from = 'CC-CM', to = 6.5)
dat.summ$app.rate <- mapvalues(dat.summ$app.rate, from = 'D-CM', to = 13)
dat.summ$app.rate <- mapvalues(dat.summ$app.rate, from = 'U-CM', to = 10)
dat.summ$app.rate <- as.numeric(dat.summ$app.rate)
# converting from mg-NH3 m-2 h-1 to % TAN h-1
dat.summ$flux.mnB <- dat.summ$flux.mn / 1000 * 14.006/17.031 / dat.summ$app.rate * 100
dat.summ$flux.sdB <- dat.summ$flux.sd / 1000 * 14.006/17.031 / dat.summ$app.rate * 100
g <- ggplot(dat.summ, aes(time, flux.mnB, color = treat, fill = treat)) + geom_point() +
theme_bw() +
facet_wrap(~ experiment) +
geom_ribbon(aes (ymax = flux.mnB + flux.sdB, ymin = flux.mnB - flux.sdB, group = treat), alpha = 0.2, color = NA) +
ylab(expression(paste(NH[3], '  flux  [% applied TAN  ', h^-1, ']'))) + xlab('Time from slurry application [h]') +
theme(legend.title = element_blank(), legend.position = 'bottom') +
scale_color_brewer(palette = "Set1") + scale_fill_brewer(palette = 'Set1')
print(g)
library(rmarkdown)
library(ggplot2)
library(openxlsx)
library(plyr)
rm(list = ls())
dirname(rstudioapi::getActiveDocumentContext()$path)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
source('../scripts/packages.R')
dat <- read.xlsx('../data/Figure 1 data.xlsx', fill = TRUE)
dat.summ <- ddply(dat, c('experiment', 'treat', 'time'), summarise, flux.mn = mean(flux), flux.sd = sd(flux))
# adding application rate, g NH4-N m-2 (from Table 1)
dat.summ$app.rate <- dat.summ$treat
dat.summ$app.rate <- mapvalues(dat.summ$app.rate, from = 'CC-CM', to = 6.5)
dat.summ$app.rate <- mapvalues(dat.summ$app.rate, from = 'D-CM', to = 13)
dat.summ$app.rate <- mapvalues(dat.summ$app.rate, from = 'U-CM', to = 10)
dat.summ$app.rate <- as.numeric(dat.summ$app.rate)
# converting from mg-NH3 m-2 h-1 to % TAN h-1
dat.summ$flux.mnB <- dat.summ$flux.mn / 1000 * 14.006/17.031 / dat.summ$app.rate * 100
dat.summ$flux.sdB <- dat.summ$flux.sd / 1000 * 14.006/17.031 / dat.summ$app.rate * 100
dat$treat <- factor(dat$treat, levels = c('U-CM', 'D-CM', 'D-CM-CC'))
dat$experiment <- factor(dat$experiment)
g <- ggplot(dat.summ, aes(time, flux.mnB, color = treat, fill = treat)) + geom_point() +
theme_bw() +
facet_wrap(~ experiment) +
geom_ribbon(aes (ymax = flux.mnB + flux.sdB, ymin = flux.mnB - flux.sdB, group = treat), alpha = 0.2, color = NA) +
ylab(expression(paste(NH[3], '  flux  [% applied TAN  ', h^-1, ']'))) + xlab('Time from slurry application [h]') +
theme(legend.title = element_blank(), legend.position = 'bottom') +
scale_color_brewer(palette = "Set1") + scale_fill_brewer(palette = 'Set1')
print(g)
library(rmarkdown)
library(ggplot2)
library(openxlsx)
library(plyr)
rm(list = ls())
dirname(rstudioapi::getActiveDocumentContext()$path)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
dat <- read.xlsx('../data/Figure 1 data.xlsx', fill = TRUE)
dat.summ <- ddply(dat, c('experiment', 'treat', 'time'), summarise, flux.mn = mean(flux), flux.sd = sd(flux))
# adding application rate, g NH4-N m-2 (from Table 1)
dat.summ$app.rate <- dat.summ$treat
dat.summ$app.rate <- mapvalues(dat.summ$app.rate, from = 'CC-CM', to = 6.5)
dat.summ$app.rate <- mapvalues(dat.summ$app.rate, from = 'D-CM', to = 13)
dat.summ$app.rate <- mapvalues(dat.summ$app.rate, from = 'U-CM', to = 10)
dat.summ$app.rate <- as.numeric(dat.summ$app.rate)
# converting from mg-NH3 m-2 h-1 to % TAN h-1
dat.summ$flux.mnB <- dat.summ$flux.mn / 1000 * 14.006/17.031 / dat.summ$app.rate * 100
dat.summ$flux.sdB <- dat.summ$flux.sd / 1000 * 14.006/17.031 / dat.summ$app.rate * 100
dat.summ$treat <- factor(dat.summ$treat, levels = c('U-CM', 'D-CM', 'D-CM-CC'))
dat.summ$experiment <- factor(dat.summ$experiment)
g <- ggplot(dat.summ, aes(time, flux.mnB, color = treat, fill = treat)) + geom_point() +
theme_bw() +
facet_wrap(~ experiment) +
geom_ribbon(aes (ymax = flux.mnB + flux.sdB, ymin = flux.mnB - flux.sdB, group = treat), alpha = 0.2, color = NA) +
ylab(expression(paste(NH[3], '  flux  [% applied TAN  ', h^-1, ']'))) + xlab('Time from slurry application [h]') +
theme(legend.title = element_blank(), legend.position = 'bottom') +
scale_color_brewer(palette = "Set1") + scale_fill_brewer(palette = 'Set1')
print(g)
library(rmarkdown)
library(ggplot2)
library(openxlsx)
library(plyr)
rm(list = ls())
dirname(rstudioapi::getActiveDocumentContext()$path)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
dat <- read.xlsx('../data/Figure 1 data.xlsx', fill = TRUE)
dat.summ <- ddply(dat, c('experiment', 'treat', 'time'), summarise, flux.mn = mean(flux), flux.sd = sd(flux))
# adding application rate, g NH4-N m-2 (from Table 1)
dat.summ$app.rate <- dat.summ$treat
dat.summ$app.rate <- mapvalues(dat.summ$app.rate, from = 'CC-CM', to = 6.5)
dat.summ$app.rate <- mapvalues(dat.summ$app.rate, from = 'D-CM', to = 13)
dat.summ$app.rate <- mapvalues(dat.summ$app.rate, from = 'U-CM', to = 10)
dat.summ$app.rate <- as.numeric(dat.summ$app.rate)
# converting from mg-NH3 m-2 h-1 to % TAN h-1
dat.summ$flux.mnB <- dat.summ$flux.mn / 1000 * 14.006/17.031 / dat.summ$app.rate * 100
dat.summ$flux.sdB <- dat.summ$flux.sd / 1000 * 14.006/17.031 / dat.summ$app.rate * 100
dat.summ$treat <- mapvalues(dat.summ$treat, from = 'CC-CM', to = 'D-CM-CC')
dat.summ$treat <- factor(dat.summ$treat, levels = c('U-CM', 'D-CM', 'D-CM-CC'))
dat.summ$experiment <- factor(dat.summ$experiment)
g <- ggplot(dat.summ, aes(time, flux.mnB, color = treat, fill = treat)) + geom_point() +
theme_bw() +
facet_wrap(~ experiment) +
geom_ribbon(aes (ymax = flux.mnB + flux.sdB, ymin = flux.mnB - flux.sdB, group = treat), alpha = 0.2, color = NA) +
ylab(expression(paste(NH[3], '  flux  [% applied TAN  ', h^-1, ']'))) + xlab('Time from slurry application [h]') +
theme(legend.title = element_blank(), legend.position = 'bottom') +
scale_color_brewer(palette = "Set1") + scale_fill_brewer(palette = 'Set1')
print(g)
# Analysis of wind tunnel measurements of 4-methyl pheno from digestate etc.
rm(list = ls())
source('packages.R')
source('functions.R')
source('load.R')
source('clean.R')
source('fit_MM.R')
render('4mp_analysis.Rmd', output_dir = '../output-stats')
source('summ.R')
source('export.R')
setwd("~/GitHub/Lemes-2022-digestate-NH3/scripts-4mp")
# Analysis of wind tunnel measurements of 4-methyl pheno from digestate etc.
rm(list = ls())
source('packages.R')
source('functions.R')
source('load.R')
source('clean.R')
source('fit_MM.R')
render('4mp_analysis.Rmd', output_dir = '../output-stats')
source('summ.R')
source('export.R')
ggplot(dat, aes(time.end, fmp, color = treatment, , group = interaction(tunnel, treatment))) +
geom_point() +
#geom_line() +
#geom_line(aes(time.end, fmp.calc), lty = '11') +
geom_line(data = pp, aes(time.end, fmp.calc), lty = 1) +
facet_wrap(~ experiment, scales = 'free_x') +
theme_bw() +
theme(legend.title = element_blank(), legend.position = 'bottom') +
labs(y = expression('4-Methylphenol [mg'~m^'-2'*']'), x  = 'Time from slurry application [h]') +
scale_color_brewer(palette = "Set1")
pp <- subset(preds,
(experiment == 'Experiment 1' & time.end < 19) |
(experiment == 'Experiment 2' & time.end < 40))
ggplot(dat, aes(time.end, fmp, color = treatment, , group = interaction(tunnel, treatment))) +
geom_point() +
#geom_line() +
#geom_line(aes(time.end, fmp.calc), lty = '11') +
geom_line(data = pp, aes(time.end, fmp.calc), lty = 1) +
facet_wrap(~ experiment, scales = 'free_x') +
theme_bw() +
theme(legend.title = element_blank(), legend.position = 'bottom') +
labs(y = expression('4-Methylphenol [mg'~m^'-2'*']'), x  = 'Time from slurry application [h]') +
scale_color_brewer(palette = "Set1")
ggsave('../plots/Figure4.png', height = 4, width = 7)
library(rmarkdown)
library(ggplot2)
library(openxlsx)
library(plyr)
rm(list = ls())
dirname(rstudioapi::getActiveDocumentContext()$path)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
dat <- read.xlsx('../data/Figure 1 data.xlsx', fill = TRUE)
dat.summ <- ddply(dat, c('experiment', 'treat', 'time'), summarise, flux.mn = mean(flux), flux.sd = sd(flux))
# adding application rate, g NH4-N m-2 (from Table 1)
dat.summ$app.rate <- dat.summ$treat
dat.summ$app.rate <- mapvalues(dat.summ$app.rate, from = 'CC-CM', to = 6.5)
dat.summ$app.rate <- mapvalues(dat.summ$app.rate, from = 'D-CM', to = 13)
dat.summ$app.rate <- mapvalues(dat.summ$app.rate, from = 'U-CM', to = 10)
dat.summ$app.rate <- as.numeric(dat.summ$app.rate)
# converting from mg-NH3 m-2 h-1 to % TAN h-1
dat.summ$flux.mnB <- dat.summ$flux.mn / 1000 * 14.006/17.031 / dat.summ$app.rate * 100
dat.summ$flux.sdB <- dat.summ$flux.sd / 1000 * 14.006/17.031 / dat.summ$app.rate * 100
dat.summ$treat <- mapvalues(dat.summ$treat, from = 'CC-CM', to = 'D-CM-CC')
dat.summ$treat <- factor(dat.summ$treat, levels = c('U-CM', 'D-CM', 'D-CM-CC'))
dat.summ$experiment <- factor(dat.summ$experiment)
g <- ggplot(dat.summ, aes(time, flux.mnB, color = treat, fill = treat)) + geom_point() +
theme_bw() +
facet_wrap(~ experiment) +
geom_ribbon(aes (ymax = flux.mnB + flux.sdB, ymin = flux.mnB - flux.sdB, group = treat), alpha = 0.2, color = NA) +
ylab(expression(paste(NH[3], '  flux  [% applied TAN  ', h^-1, ']'))) + xlab('Time from slurry application [h]') +
theme(legend.title = element_blank(), legend.position = 'bottom') +
scale_color_brewer(palette = "Set1") + scale_fill_brewer(palette = 'Set1')
print(g)
g <- ggplot(dat.summ, aes(time, flux.mnB, color = treat, fill = treat)) + geom_point() +
theme_bw() +
facet_wrap(~ experiment) +
geom_ribbon(aes (ymax = flux.mnB + flux.sdB, ymin = flux.mnB - flux.sdB, group = treat), alpha = 0.2, color = NA) +
ylab(expression(paste(NH[3], '  flux  [% applied TAN  ', h^-1, ']'))) + xlab('Time from slurry application [h]') +
theme(legend.title = element_blank(), legend.position = 'bottom') +
scale_color_brewer(palette = "Set1") + scale_fill_brewer(palette = 'Set1')
print(g)
ggsave('../plots/Figure1.png', height = 4, width = 7)
rm(list = ls())
dirname(rstudioapi::getActiveDocumentContext()$path)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
source('../scripts/packages.R')
dat <- read.xlsx('../data//Figure 2 data.xlsx', fill = TRUE)
dat$experiment <- as.factor(dat$experiment)
dat$treat <- as.factor(dat$treat)
# adding application rate, g NH4-N m-2 (from Table 1)
dat$app.rate <- dat$treat
dat$app.rate <- mapvalues(dat$app.rate, from = 'D-CM-CC', to = 6.5)
dat$app.rate <- mapvalues(dat$app.rate, from = 'D-CM', to = 13)
dat$app.rate <- mapvalues(dat$app.rate, from = 'U-CM', to = 10)
dat$app.rate <- as.numeric(as.character(dat$app.rate))
dat$loss.mn <- (dat$mean) / dat$app.rate * 100
dat$loss.sd <- (dat$sd) / dat$app.rate * 100
dat$treat <- mapvalues(dat$treat, from = 'CC-CM', to = 'D-CM-CC')
dat$treat <- factor(dat$treat, levels = c('U-CM', 'D-CM', 'D-CM-CC'))
dat$experiment <- factor(dat$experiment)
g <- ggplot(dat, aes(treat, loss.mn, fill = treat)) + geom_bar(stat = 'identity', width = 0.7) +
theme_bw() +
facet_wrap(~ experiment) +
geom_errorbar(aes(ymax = loss.mn + loss.sd, ymin = loss.mn - loss.sd), position = position_dodge(0.7), width = 0.2) +
theme(legend.title = element_blank(), legend.position = 'bottom') +
theme(axis.title.x = element_blank()) +
ylab('Emission after 160 h [% of applied TAN]') +
scale_fill_brewer(palette = "Set1")
print(g)
rm(list = ls())
dirname(rstudioapi::getActiveDocumentContext()$path)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
source('../scripts/packages.R')
source('/packages.R')
source('packages.R')
rm(list = ls())
dirname(rstudioapi::getActiveDocumentContext()$path)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
source('packages.R')
dat <- read.xlsx('../data//Figure 2 data.xlsx', fill = TRUE)
dat$experiment <- as.factor(dat$experiment)
dat$treat <- as.factor(dat$treat)
# adding application rate, g NH4-N m-2 (from Table 1)
dat$app.rate <- dat$treat
dat$app.rate <- mapvalues(dat$app.rate, from = 'D-CM-CC', to = 6.5)
dat$app.rate <- mapvalues(dat$app.rate, from = 'D-CM', to = 13)
dat$app.rate <- mapvalues(dat$app.rate, from = 'U-CM', to = 10)
dat$app.rate <- as.numeric(as.character(dat$app.rate))
dat$loss.mn <- (dat$mean) / dat$app.rate * 100
dat$loss.sd <- (dat$sd) / dat$app.rate * 100
dat$treat <- mapvalues(dat$treat, from = 'CC-CM', to = 'D-CM-CC')
dat$treat <- factor(dat$treat, levels = c('U-CM', 'D-CM', 'D-CM-CC'))
dat$experiment <- factor(dat$experiment)
g <- ggplot(dat, aes(treat, loss.mn, fill = treat)) + geom_bar(stat = 'identity', width = 0.7) +
theme_bw() +
facet_wrap(~ experiment) +
geom_errorbar(aes(ymax = loss.mn + loss.sd, ymin = loss.mn - loss.sd), position = position_dodge(0.7), width = 0.2) +
theme(legend.title = element_blank(), legend.position = 'bottom') +
theme(axis.title.x = element_blank()) +
ylab('Emission after 160 h [% of applied TAN]') +
scale_fill_brewer(palette = "Set1")
print(g)
rm(list = ls())
dirname(rstudioapi::getActiveDocumentContext()$path)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
source('packages.R')
dat <- read.xlsx('../data//Figure 2 data.xlsx', fill = TRUE)
dat$experiment <- as.factor(dat$experiment)
dat$treat <- as.factor(dat$treat)
# adding application rate, g NH4-N m-2 (from Table 1)
dat$app.rate <- dat$treat
dat$app.rate <- mapvalues(dat$app.rate, from = 'CM-CC', to = 6.5)
dat$app.rate <- mapvalues(dat$app.rate, from = 'D-CM', to = 13)
dat$app.rate <- mapvalues(dat$app.rate, from = 'U-CM', to = 10)
dat$app.rate <- as.numeric(as.character(dat$app.rate))
dat$loss.mn <- (dat$mean) / dat$app.rate * 100
dat$loss.sd <- (dat$sd) / dat$app.rate * 100
dat$treat <- mapvalues(dat$treat, from = 'CC-CM', to = 'D-CM-CC')
dat$treat <- factor(dat$treat, levels = c('U-CM', 'D-CM', 'D-CM-CC'))
dat$experiment <- factor(dat$experiment)
g <- ggplot(dat, aes(treat, loss.mn, fill = treat)) + geom_bar(stat = 'identity', width = 0.7) +
theme_bw() +
facet_wrap(~ experiment) +
geom_errorbar(aes(ymax = loss.mn + loss.sd, ymin = loss.mn - loss.sd), position = position_dodge(0.7), width = 0.2) +
theme(legend.title = element_blank(), legend.position = 'bottom') +
theme(axis.title.x = element_blank()) +
ylab('Emission after 160 h [% of applied TAN]') +
scale_fill_brewer(palette = "Set1")
print(g)
rm(list = ls())
dirname(rstudioapi::getActiveDocumentContext()$path)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
source('packages.R')
dat <- read.xlsx('../data//Figure 2 data.xlsx', fill = TRUE)
dat$experiment <- as.factor(dat$experiment)
dat$treat <- as.factor(dat$treat)
# adding application rate, g NH4-N m-2 (from Table 1)
dat$app.rate <- dat$treat
dat$app.rate <- mapvalues(dat$app.rate, from = 'CM-CC', to = 6.5)
dat$app.rate <- mapvalues(dat$app.rate, from = 'D-CM', to = 13)
dat$app.rate <- mapvalues(dat$app.rate, from = 'U-CM', to = 10)
dat$app.rate <- as.numeric(as.character(dat$app.rate))
rm(list = ls())
dirname(rstudioapi::getActiveDocumentContext()$path)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
source('packages.R')
dat <- read.xlsx('../data//Figure 2 data.xlsx', fill = TRUE)
dat$experiment <- as.factor(dat$experiment)
dat$treat <- as.factor(dat$treat)
# adding application rate, g NH4-N m-2 (from Table 1)
dat$app.rate <- dat$treat
dat$app.rate <- mapvalues(dat$app.rate, from = 'CM-CC', to = 6.5)
# adding application rate, g NH4-N m-2 (from Table 1)
dat$app.rate <- dat$treat
dat$app.rate <- mapvalues(dat$app.rate, from = 'CC-CM', to = 6.5)
dat$app.rate <- mapvalues(dat$app.rate, from = 'D-CM', to = 13)
dat$app.rate <- mapvalues(dat$app.rate, from = 'U-CM', to = 10)
dat$app.rate <- as.numeric(as.character(dat$app.rate))
dat$loss.mn <- (dat$mean) / dat$app.rate * 100
dat$loss.sd <- (dat$sd) / dat$app.rate * 100
dat$treat <- mapvalues(dat$treat, from = 'CC-CM', to = 'D-CM-CC')
dat$treat <- factor(dat$treat, levels = c('U-CM', 'D-CM', 'D-CM-CC'))
dat$experiment <- factor(dat$experiment)
g <- ggplot(dat, aes(treat, loss.mn, fill = treat)) + geom_bar(stat = 'identity', width = 0.7) +
theme_bw() +
facet_wrap(~ experiment) +
geom_errorbar(aes(ymax = loss.mn + loss.sd, ymin = loss.mn - loss.sd), position = position_dodge(0.7), width = 0.2) +
theme(legend.title = element_blank(), legend.position = 'bottom') +
theme(axis.title.x = element_blank()) +
ylab('Emission after 160 h [% of applied TAN]') +
scale_fill_brewer(palette = "Set1")
print(g)
ggsave('../plots/Figure2_v2.png', height = 4, width = 4)
rm(list = ls())
dirname(rstudioapi::getActiveDocumentContext()$path)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
source('packages.R')
dat <- read.xlsx('../data/Figure 3 data.xlsx', fill = TRUE)
rm(list = ls())
dirname(rstudioapi::getActiveDocumentContext()$path)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
source('packages.R')
dat <- read.xlsx('../data/Figure 3 data.xlsx', fill = TRUE)
dat$treatment <- mapvalues(dat$treatment, from = 'CC-CM', to = 'D-CM-CC')
dat$treatment <- factor(dat$treatment, levels = c('U-CM', 'D-CM', 'D-CM-CC'))
dat$experiment <- factor(dat$experiment)
g <- ggplot(dat, aes(time, mean, color = treatment, fill = treatment)) + geom_point() + geom_line() +
theme_bw() +
facet_wrap(~ experiment, scales = 'free_x') +
geom_ribbon(aes (ymax = mean + sd, ymin = mean - sd, group = treatment), alpha = 0.2, color = NA) +
ylab('SOAV') + xlab('Time from slurry application [h]') +
theme(legend.title = element_blank(), legend.position = 'bottom') +
scale_color_brewer(palette = "Set1") + scale_fill_brewer(palette = 'Set1')
print(g)
ggsave('../plots/Figure3.png', height = 4, width = 7)
