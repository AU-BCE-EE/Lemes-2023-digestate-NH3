DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
# DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
# DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
# DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
# DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
# combinding data again
DT <- rbind(DT1[, 1:4], DT2)
DT$mm.new <- 100 - DT$mm
DT <- mutate(group_by(DT, exp), mm.new = 100 - mm.new[1] + mm.new)
DT$mm.new <- DT$mm.new / 10
ggplot(DT, aes(sec, mm.new, color = exp)) + geom_line()
# addding treatment
DT$treat <- DT$exp
DT$treat <- mapvalues(DT$treat, from = c('W1', 'W2', 'W3', 'W4', 'W5', 'W6'), to = rep(c('water'), 6))
DT$treat <- mapvalues(DT$treat, from = c('F1', 'F2', 'F3', 'F4', 'F5'), to = rep(c('Foulum'), 5))
DT$treat <- mapvalues(DT$treat, from = c('FS1', 'FS2', 'FS3', 'FS4', 'FS5', 'FS6', 'FS7', 'FS8', 'FS9'), to = rep(c('Foulum sep'), 9))
DT$treat <- mapvalues(DT$treat, from = c('S1', 'S2', 'S3', 'S4', 'S5', 'S6', 'S7', 'S8'), to = rep(c('Sindal 2'), 8))
DT$treat <- mapvalues(DT$treat, from = c('SS1', 'SS2', 'SS3', 'SS4', 'SS5', 'SS6', 'SS7'), to = rep(c('Sindal 1+2 sep'), 7))
DT$treat <- mapvalues(DT$treat, from = c('G1', 'G2', 'G3', 'G4', 'G5', 'G6'), to = rep(c('Grauballegaard'), 6))
DT$treat <- mapvalues(DT$treat, from = c('B1', 'B2', 'B3', 'B4', 'B5'), to = rep(c('BB'), 5))
# removing data where there is 'jump', see below for individual plots, power supply issue or crops??
DT <- DT[! grepl('W3|FS1|FS2|FS6|SS2|SS5|G1', DT$exp), ]
# |S1|S3|S5
# deleting last measurements for some treatments, measurement stopped before logging.
DT <- DT[! c(DT$exp == 'W2' & DT$sec >= 240), ]
DT <- DT[! c(DT$exp == 'F2' & DT$sec >= 210), ]
DT <- DT[! c(DT$exp == 'F1' & DT$sec >= 210), ]
# DT <- DT[! c(DT$exp == 'S2' & DT$sec >= 200), ]
# DT <- DT[! c(DT$exp == 'S1' & DT$sec >= 210), ]
# moving time so all start at sec = 0
DT <- mutate(group_by(DT, exp), sec = sec-sec[1])
DT <- na.omit(DT)
ggplot(DT[DT$treat == 'Sindal 2', ], aes(sec, mm.new, color = exp)) +
geom_line(aes(group = exp)) +
labs(x = 'seconds', y = 'cm') #+ xlim(0, 600)
# sensor test
rm(list = ls())
dirname(rstudioapi::getActiveDocumentContext()$path)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# packages:
library(ggplot2)
library(plyr)
library(dplyr)
library(data.table)
# source('../functions/aggregate2.R')
# reading in data
filelist = list.files(path = '230301_data',
recursive = TRUE,
pattern = '\\.txt$',
full.names = TRUE)
DT <- rbindlist(sapply(filelist, fread, simplify = FALSE), use.names = TRUE, idcol = 'FileName')
colnames(DT) <- c('exp', 'date.time', 'mm')
DT$exp <- gsub('230301_data/', '', DT$exp)
DT$exp <- gsub('.txt', '', DT$exp)
# adding seconds
DT <- mutate(group_by(DT, exp), sec = 1:n()/10)
# ggplot(DT, aes(sec, mm, color = exp)) +
#   geom_line(aes(group = exp)) +
#   labs(x = 'seconds', y = 'mm') +
#   ylim(40, 100)
DT <- DT[! DT$mm < 0 & ! DT$mm > 120, ]
# dividing data to run next function some times to find correct starting time
DT1 <- DT[DT$sec <= 30, ]
DT2 <- DT[DT$sec >= 31, ]
# finding the starting point - Run some times?
DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
# DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
# DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
# DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
# DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
# combinding data again
DT <- rbind(DT1[, 1:4], DT2)
DT$mm.new <- 100 - DT$mm
DT <- mutate(group_by(DT, exp), mm.new = 100 - mm.new[1] + mm.new)
DT$mm.new <- DT$mm.new / 10
ggplot(DT, aes(sec, mm.new, color = exp)) + geom_line()
# addding treatment
DT$treat <- DT$exp
DT$treat <- mapvalues(DT$treat, from = c('W1', 'W2', 'W3', 'W4', 'W5', 'W6'), to = rep(c('water'), 6))
DT$treat <- mapvalues(DT$treat, from = c('F1', 'F2', 'F3', 'F4', 'F5'), to = rep(c('Foulum'), 5))
DT$treat <- mapvalues(DT$treat, from = c('FS1', 'FS2', 'FS3', 'FS4', 'FS5', 'FS6', 'FS7', 'FS8', 'FS9'), to = rep(c('Foulum sep'), 9))
DT$treat <- mapvalues(DT$treat, from = c('S1', 'S2', 'S3', 'S4', 'S5', 'S6', 'S7', 'S8'), to = rep(c('Sindal 2'), 8))
DT$treat <- mapvalues(DT$treat, from = c('SS1', 'SS2', 'SS3', 'SS4', 'SS5', 'SS6', 'SS7'), to = rep(c('Sindal 1+2 sep'), 7))
DT$treat <- mapvalues(DT$treat, from = c('G1', 'G2', 'G3', 'G4', 'G5', 'G6'), to = rep(c('Grauballegaard'), 6))
DT$treat <- mapvalues(DT$treat, from = c('B1', 'B2', 'B3', 'B4', 'B5'), to = rep(c('BB'), 5))
# removing data where there is 'jump', see below for individual plots, power supply issue or crops??
DT <- DT[! grepl('W3|FS1|FS2|FS6|SS2|SS5|G1|S6|S3|S8', DT$exp), ]
# deleting last measurements for some treatments, measurement stopped before logging.
DT <- DT[! c(DT$exp == 'W2' & DT$sec >= 240), ]
DT <- DT[! c(DT$exp == 'F2' & DT$sec >= 210), ]
DT <- DT[! c(DT$exp == 'F1' & DT$sec >= 210), ]
# DT <- DT[! c(DT$exp == 'S2' & DT$sec >= 200), ]
# DT <- DT[! c(DT$exp == 'S1' & DT$sec >= 210), ]
# moving time so all start at sec = 0
DT <- mutate(group_by(DT, exp), sec = sec-sec[1])
DT <- na.omit(DT)
ggplot(DT[DT$treat == 'Sindal 2', ], aes(sec, mm.new, color = exp)) +
geom_line(aes(group = exp)) +
labs(x = 'seconds', y = 'cm') #+ xlim(0, 600)
DT <- DT[! c(DT$exp == 'S2' & DT$sec >= 210), ]
DT <- DT[! c(DT$exp == 'S1' & DT$sec >= 210), ]
ggplot(DT[DT$treat == 'Sindal 2', ], aes(sec, mm.new, color = exp)) +
geom_line(aes(group = exp)) +
labs(x = 'seconds', y = 'cm') #+ xlim(0, 600)
# each individual digestate
ggplot(DT[DT$treat == 'water', ], aes(sec, mm.new, color = exp)) +
geom_line(aes(group = exp)) +
labs(x = 'seconds', y = 'cm') #+ xlim(0, 600)
ggplot(DT[DT$treat == 'Foulum', ], aes(sec, mm.new, color = exp)) +
geom_line(aes(group = exp)) +
labs(x = 'seconds', y = 'cm') #+ xlim(0, 600)
ggplot(DT[DT$treat == 'Foulum sep', ], aes(sec, mm.new, color = exp)) +
geom_line(aes(group = exp)) +
labs(x = 'seconds', y = 'cm') #+ xlim(0, 600)
ggplot(DT[DT$treat == 'BB', ], aes(sec, mm.new, color = exp)) +
geom_line(aes(group = exp)) +
labs(x = 'seconds', y = 'cm') #+ xlim(0, 600)
ggplot(DT[DT$treat == 'Sindal 1+2 sep', ], aes(sec, mm.new, color = exp)) +
geom_line(aes(group = exp)) +
labs(x = 'seconds', y = 'cm') #+ xlim(0, 600)
ggplot(DT[DT$treat == 'Sindal 2', ], aes(sec, mm.new, color = exp)) +
geom_line(aes(group = exp)) +
labs(x = 'seconds', y = 'cm') #+ xlim(0, 600)
ggplot(DT[DT$treat == 'Sindal 1+2 sep', ], aes(sec, mm.new, color = exp)) +
geom_line(aes(group = exp)) +
labs(x = 'seconds', y = 'cm') #+ xlim(0, 600)
ggplot(DT[DT$treat == 'Sindal 2', ], aes(sec, mm.new, color = exp)) +
geom_line(aes(group = exp)) +
labs(x = 'seconds', y = 'cm') #+ xlim(0, 600)
ggplot(DT[DT$treat == 'Grauballegaard', ], aes(sec, mm.new, color = exp)) +
geom_line(aes(group = exp)) +
labs(x = 'seconds', y = 'cm') + ylim(9, 10.5)
# sensor test
rm(list = ls())
dirname(rstudioapi::getActiveDocumentContext()$path)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# packages:
library(ggplot2)
library(plyr)
library(dplyr)
library(data.table)
# source('../functions/aggregate2.R')
# reading in data
filelist = list.files(path = '230301_data',
recursive = TRUE,
pattern = '\\.txt$',
full.names = TRUE)
DT <- rbindlist(sapply(filelist, fread, simplify = FALSE), use.names = TRUE, idcol = 'FileName')
colnames(DT) <- c('exp', 'date.time', 'mm')
DT$exp <- gsub('230301_data/', '', DT$exp)
DT$exp <- gsub('.txt', '', DT$exp)
# adding seconds
DT <- mutate(group_by(DT, exp), sec = 1:n()/10)
# ggplot(DT, aes(sec, mm, color = exp)) +
#   geom_line(aes(group = exp)) +
#   labs(x = 'seconds', y = 'mm') +
#   ylim(40, 100)
DT <- DT[! DT$mm < 0 & ! DT$mm > 120, ]
# dividing data to run next function some times to find correct starting time
DT1 <- DT[DT$sec <= 30, ]
DT2 <- DT[DT$sec >= 31, ]
# finding the starting point - Run some times?
DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
# DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
# DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
# DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
# DT1 <- mutate(group_by(DT1, exp), test = mm < mm[-1]); DT1 <- DT1[! DT1$test == 'FALSE', ]
# combinding data again
DT <- rbind(DT1[, 1:4], DT2)
DT$mm.new <- 100 - DT$mm
DT <- mutate(group_by(DT, exp), mm.new = 100 - mm.new[1] + mm.new)
DT$mm.new <- DT$mm.new / 10
# ggplot(DT, aes(sec, mm.new, color = exp)) + geom_line()
# addding treatment
DT$treat <- DT$exp
DT$treat <- mapvalues(DT$treat, from = c('W1', 'W2', 'W3', 'W4', 'W5', 'W6'), to = rep(c('water'), 6))
DT$treat <- mapvalues(DT$treat, from = c('F1', 'F2', 'F3', 'F4', 'F5'), to = rep(c('Foulum'), 5))
DT$treat <- mapvalues(DT$treat, from = c('FS1', 'FS2', 'FS3', 'FS4', 'FS5', 'FS6', 'FS7', 'FS8', 'FS9'), to = rep(c('Foulum sep'), 9))
DT$treat <- mapvalues(DT$treat, from = c('S1', 'S2', 'S3', 'S4', 'S5', 'S6', 'S7', 'S8'), to = rep(c('Sindal 2'), 8))
DT$treat <- mapvalues(DT$treat, from = c('SS1', 'SS2', 'SS3', 'SS4', 'SS5', 'SS6', 'SS7'), to = rep(c('Sindal 1+2 sep'), 7))
DT$treat <- mapvalues(DT$treat, from = c('G1', 'G2', 'G3', 'G4', 'G5', 'G6'), to = rep(c('Grauballegaard'), 6))
DT$treat <- mapvalues(DT$treat, from = c('B1', 'B2', 'B3', 'B4', 'B5'), to = rep(c('BB'), 5))
# removing data where there is 'jump', see below for individual plots, power supply issue or crops??
DT <- DT[! grepl('W3|FS1|FS2|FS6|SS2|SS5|G1|S6|S3|S8', DT$exp), ]
# deleting last measurements for some treatments, measurement stopped before logging.
DT <- DT[! c(DT$exp == 'W2' & DT$sec >= 240), ]
DT <- DT[! c(DT$exp == 'F2' & DT$sec >= 210), ]
DT <- DT[! c(DT$exp == 'F1' & DT$sec >= 210), ]
DT <- DT[! c(DT$exp == 'S2' & DT$sec >= 210), ]
DT <- DT[! c(DT$exp == 'S1' & DT$sec >= 210), ]
# moving time so all start at sec = 0
DT <- mutate(group_by(DT, exp), sec = sec-sec[1])
ggplot(DT[DT$treat == 'Sindal 1+2 sep', ], aes(sec, mm.new, color = exp)) +
geom_line(aes(group = exp)) +
labs(x = 'seconds', y = 'cm') #+ xlim(0, 600)
# Analysis of wind tunnel measurements of 4-methyl pheno from digestate etc.
rm(list = ls())
source('packages.R')
source('functions.R')
source('load.R')
source('clean.R')
source('fit_MM.R')
render('4mp_analysis.Rmd', output_dir = '../output-stats')
source('summ.R')
source('export.R')
setwd("~/GitHub/Lemes-2023-digestate-NH3/scripts-4mp")
rm(list = ls())
source('packages.R')
source('functions.R')
source('load.R')
source('clean.R')
source('fit_MM.R')
render('4mp_analysis.Rmd', output_dir = '../output-stats')
source('summ.R')
source('export.R')
pp <- subset(preds,
(experiment == 'Experiment 1' & time.end < 19) |
(experiment == 'Experiment 2' & time.end < 40))
ggplot(dat, aes(time.end, fmp, color = treatment, , group = interaction(tunnel, treatment))) +
geom_point() +
#geom_line() +
#geom_line(aes(time.end, fmp.calc), lty = '11') +
geom_line(data = pp, aes(time.end, fmp.calc), lty = 1) +
facet_wrap(~ experiment, scales = 'free_x') +
theme_bw() +
theme(legend.title = element_blank(), legend.position = 'bottom') +
labs(y = expression('4-Methylphenol [mg'~m^'-2'*']'), x  = 'Time from slurry application [h]') +
scale_color_brewer(palette = "Set1")
ggsave2x('../plots/Figure4', height = 4, width = 7)
rm(list = ls())
dirname(rstudioapi::getActiveDocumentContext()$path)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
source('packages.R')
source('../functions/ggsave2x.R')
source('load.R')
source('clean.R')
# Figure 1
g <- ggplot(dat1.summ, aes(time, flux.mnB, color = treat, fill = treat)) + geom_point() +
theme_bw() +
facet_wrap(~ experiment) +
geom_ribbon(aes (ymax = flux.mnB + flux.sdB, ymin = flux.mnB - flux.sdB, group = treat), alpha = 0.2, color = NA) +
ylab(expression(paste(NH[3], '  flux  [% applied TAN  ', h^-1, ']'))) + xlab('Time from slurry application [h]') +
theme(legend.title = element_blank(), legend.position = 'bottom') +
scale_color_brewer(palette = "Set1") + scale_fill_brewer(palette = 'Set1')
print(g)
# Figure 2
g <- ggplot(dat2, aes(treat, loss.mn, fill = treat)) + geom_bar(stat = 'identity', width = 0.7) +
theme_bw() +
facet_wrap(~ experiment) +
geom_errorbar(aes(ymax = loss.mn + loss.sd, ymin = loss.mn - loss.sd), position = position_dodge(0.7), width = 0.2) +
theme(legend.title = element_blank(), legend.position = 'bottom') +
theme(axis.title.x = element_blank()) +
ylab('Emission after 160 h [% of applied TAN]') +
scale_fill_brewer(palette = "Set1")
print(g)
View(dat1)
View(dat2)
View(dat3)
source('packages.R')
source('../functions/ggsave2x.R')
source('load.R')
rm(list = ls())
dirname(rstudioapi::getActiveDocumentContext()$path)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
source('packages.R')
source('../functions/ggsave2x.R')
source('load.R')
rm(list = ls())
dirname(rstudioapi::getActiveDocumentContext()$path)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
source('packages.R')
source('../functions/ggsave2x.R')
dat1 <- read.xlsx('../data/Figure 1 data.xlsx', fill = TRUE)
dat2 <- read.xlsx('../data//Figure 2 data.xlsx', fill = TRUE)
dat22 <- read.xlsx('../data//Figure 2 data new version.xlsx', fill = TRUE)
dat3 <- read.xlsx('../data/Figure 3 data.xlsx', fill = TRUE)
datSS <- read.xlsx('../data/Figure SS data.xlsx', fill = TRUE)
# Figure 2 new version
dat22$experiment <- as.factor(dat22$experiment)
dat22$treat <- as.factor(dat22$treat)
# adding application rate, g NH4-N m-2 (from Table 1)
dat22$app.rate <- dat22$treat
dat22$app.rate <- mapvalues(dat22$app.rate, from = 'CC-CM', to = 6.5)
dat22$app.rate <- mapvalues(dat22$app.rate, from = 'D-CM', to = 13)
dat22$app.rate <- mapvalues(dat22$app.rate, from = 'D-CM-CC', to = 6.5)
dat22$app.rate <- mapvalues(dat22$app.rate, from = 'D-CM', to = 13)
dat22$app.rate <- mapvalues(dat22$app.rate, from = 'U-CM', to = 10)
dat22$app.rate <- as.numeric(as.character(dat22$app.rate))
dat22$loss <- (dat22$mean) / dat22$app.rate * 100
dat22$treat <- factor(dat22$treat, levels = c('U-CM', 'D-CM', 'D-CM-CC'))
dat22$experiment <- factor(dat22$experiment)
# Figure 2, version 2, points instead of barchart
g <- ggplot(dat22, aes(treat, loss, color = treat)) + geom_point() +
theme_bw() #+
# ylab('Emission after 110 h (% of applied TAN)') +
# theme(legend.position = 'bottom') + theme(legend.title = element_blank()) +
# scale_fill_brewer(palette = 'Set1') +
# geom_segment(data = all.dat.end, aes( x = as.numeric(as.factor(treat)) - 0.5,
#                                       xend = as.numeric(as.factor(treat)) + 0.5,
#                                       yend = N.proc1,
#                                       y = N.proc1,
#                                       color = treat)) +
# guides(color = guide_legend(nrow = 2, byrow = TRUE)) +
# ylim(0, NA)
print(g)
facet_wrap(~ experiment) +
theme(axis.text.x = element_blank()) + theme(axis.ticks = element_blank()) + theme(axis.title.x = element_blank()) +
ylab('Emission after 160 h [% of applied TAN]') +
theme(legend.position = 'bottom') + theme(legend.title = element_blank()) +
scale_fill_brewer(palette = 'Set1') +
# geom_segment(data = all.dat.end, aes( x = as.numeric(as.factor(treat)) - 0.5,
#                                       xend = as.numeric(as.factor(treat)) + 0.5,
#                                       yend = N.proc1,
#                                       y = N.proc1,
#                                       color = treat)) +
guides(color = guide_legend(nrow = 2, byrow = TRUE)) +
ylim(0, NA)
print(g)
# Figure 2, version 2, points instead of barchart
g <- ggplot(dat22, aes(treat, loss, color = treat)) + geom_point() +
theme_bw() +
facet_wrap(~ experiment) +
theme(axis.text.x = element_blank()) + theme(axis.ticks = element_blank()) + theme(axis.title.x = element_blank()) +
ylab('Emission after 160 h [% of applied TAN]') +
theme(legend.position = 'bottom') + theme(legend.title = element_blank()) +
scale_fill_brewer(palette = 'Set1') +
# geom_segment(data = all.dat.end, aes( x = as.numeric(as.factor(treat)) - 0.5,
#                                       xend = as.numeric(as.factor(treat)) + 0.5,
#                                       yend = N.proc1,
#                                       y = N.proc1,
#                                       color = treat)) +
guides(color = guide_legend(nrow = 2, byrow = TRUE)) +
ylim(0, NA)
print(g)
rm(list = ls())
dirname(rstudioapi::getActiveDocumentContext()$path)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
source('packages.R')
source('../functions/ggsave2x.R')
source('load.R')
source('clean.R')
# Figure 2, version 2, points instead of barchart
g <- ggplot(dat22, aes(treat, loss, color = treat)) + geom_point() +
theme_bw() +
facet_wrap(~ experiment) +
theme(axis.text.x = element_blank()) + theme(axis.ticks = element_blank()) + theme(axis.title.x = element_blank()) +
ylab('Emission after 160 h [% of applied TAN]') +
theme(legend.position = 'bottom') + theme(legend.title = element_blank()) +
scale_fill_brewer(palette = 'Set1') +
# geom_segment(data = all.dat.end, aes( x = as.numeric(as.factor(treat)) - 0.5,
#                                       xend = as.numeric(as.factor(treat)) + 0.5,
#                                       yend = N.proc1,
#                                       y = N.proc1,
#                                       color = treat)) +
guides(color = guide_legend(nrow = 2, byrow = TRUE)) +
ylim(0, NA)
# Figure 2, version 2, points instead of barchart
g <- ggplot(dat22, aes(treat, loss, color = treat)) + geom_point() +
theme_bw() +
facet_wrap(~ experiment) +
theme(axis.text.x = element_blank()) + theme(axis.ticks = element_blank()) + theme(axis.title.x = element_blank()) +
ylab('Emission after 160 h [% of applied TAN]') +
theme(legend.position = 'bottom') + theme(legend.title = element_blank()) +
scale_fill_brewer(palette = 'Set1') +
geom_segment(data = dat2, aes( x = as.numeric(as.factor(treat)) - 0.5,
xend = as.numeric(as.factor(treat)) + 0.5,
yend = loss.mn,
y = loss.mn,
color = treat)) +
guides(color = guide_legend(nrow = 2, byrow = TRUE)) +
ylim(0, NA)
# Figure 2, version 2, points instead of barchart
g <- ggplot(dat22, aes(treat, loss, color = treat)) + geom_point() +
theme_bw() +
facet_wrap(~ experiment) +
theme(axis.text.x = element_blank()) + theme(axis.ticks = element_blank()) + theme(axis.title.x = element_blank()) +
ylab('Emission after 160 h [% of applied TAN]') +
theme(legend.position = 'bottom') + theme(legend.title = element_blank()) +
scale_fill_brewer(palette = 'Set1') +
geom_segment(data = dat2, aes( x = as.numeric(as.factor(treat)) - 0.5,
xend = as.numeric(as.factor(treat)) + 0.5,
yend = loss.mn,
y = loss.mn,
color = treat)) +
#  guides(color = guide_legend(nrow = 2, byrow = TRUE)) +
ylim(0, NA)
print(g)
ggsave2x('../plots/Figure2_v3', height = 4, width = 4)
